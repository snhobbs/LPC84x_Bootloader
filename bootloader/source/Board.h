/*
 * Copyright 2020 ElectroOptical Innovations, LLC
 * Board.h 
 * Autogenerated file: 2020-09-09T00:42:48.888036
 */

#pragma once
#include "IOPins.h"
#include <Chip.h>
#include <array>
#include <cassert>

class Board {
  const Chip::MainClockSpeeds main_clock_frequency_;
  Chip chip_{};
  PinSetter pinsetter_;
  std::array<char, (Chip::GetSerialNumberLength())> serial_number_{};

  void PinInit(void) const {
    pinsetter_.OpenPinChange();
    IOPins::RxdUSART0.Setup();
    IOPins::TxdUSART0.Setup();
    pinsetter_.ClosePinChange();
  }

 public:
  void GetSerialNumber(char * const data, const std::size_t array_size) {
    for (std::size_t i = 0; i < array_size; i++) {
      data[i] = serial_number_[i];
    }
  }

  void Setup(void) {
    //  chip_.Setup(main_clock_frequency_);
    //  pinsetter_.InitializeGpio();
    PinInit();
    chip_.ReadSerialNumber(serial_number_.data(), serial_number_.size());
  }

  template<typename T>
  void SetupPin(T& pin) {
    pinsetter_.OpenPinChange();
    pin.Setup();
    pinsetter_.ClosePinChange();
  }
  explicit Board(Chip::MainClockSpeeds main_clock_frequency)
      : main_clock_frequency_{main_clock_frequency} {}

 private:
  Board(const Board &) = delete;
  Board &operator=(const Board &) = delete;
};
